//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ReportManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmTime", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Database.Model")]
    [System.SerializableAttribute()]
    public partial class AlarmTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ReportManagerService.AlarmType AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ReportManagerService.AlarmType AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Tags.InputTags")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOW = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HIGH = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagValue", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Database.Model")]
    [System.SerializableAttribute()]
    public partial class TagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportManagerService.IReportManager")]
    public interface IReportManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllAlarmsForTime", ReplyAction="http://tempuri.org/IReportManager/GetAllAlarmsForTimeResponse")]
        ReportManager.ReportManagerService.AlarmTime[] GetAllAlarmsForTime(System.DateTime start, System.DateTime end, string sortType, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllAlarmsForTime", ReplyAction="http://tempuri.org/IReportManager/GetAllAlarmsForTimeResponse")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerService.AlarmTime[]> GetAllAlarmsForTimeAsync(System.DateTime start, System.DateTime end, string sortType, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllAlarmsForPriority", ReplyAction="http://tempuri.org/IReportManager/GetAllAlarmsForPriorityResponse")]
        ReportManager.ReportManagerService.AlarmTime[] GetAllAlarmsForPriority(int priority, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllAlarmsForPriority", ReplyAction="http://tempuri.org/IReportManager/GetAllAlarmsForPriorityResponse")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerService.AlarmTime[]> GetAllAlarmsForPriorityAsync(int priority, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllTagValuesForTime", ReplyAction="http://tempuri.org/IReportManager/GetAllTagValuesForTimeResponse")]
        ReportManager.ReportManagerService.TagValue[] GetAllTagValuesForTime(System.DateTime start, System.DateTime end, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllTagValuesForTime", ReplyAction="http://tempuri.org/IReportManager/GetAllTagValuesForTimeResponse")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerService.TagValue[]> GetAllTagValuesForTimeAsync(System.DateTime start, System.DateTime end, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllTagValuesForType", ReplyAction="http://tempuri.org/IReportManager/GetAllTagValuesForTypeResponse")]
        ReportManager.ReportManagerService.TagValue[] GetAllTagValuesForType(string type, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllTagValuesForType", ReplyAction="http://tempuri.org/IReportManager/GetAllTagValuesForTypeResponse")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerService.TagValue[]> GetAllTagValuesForTypeAsync(string type, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllTagValuesForName", ReplyAction="http://tempuri.org/IReportManager/GetAllTagValuesForNameResponse")]
        ReportManager.ReportManagerService.TagValue[] GetAllTagValuesForName(string tagName, bool asc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetAllTagValuesForName", ReplyAction="http://tempuri.org/IReportManager/GetAllTagValuesForNameResponse")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerService.TagValue[]> GetAllTagValuesForNameAsync(string tagName, bool asc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerChannel : ReportManager.ReportManagerService.IReportManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerClient : System.ServiceModel.ClientBase<ReportManager.ReportManagerService.IReportManager>, ReportManager.ReportManagerService.IReportManager {
        
        public ReportManagerClient() {
        }
        
        public ReportManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ReportManagerService.AlarmTime[] GetAllAlarmsForTime(System.DateTime start, System.DateTime end, string sortType, bool asc) {
            return base.Channel.GetAllAlarmsForTime(start, end, sortType, asc);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerService.AlarmTime[]> GetAllAlarmsForTimeAsync(System.DateTime start, System.DateTime end, string sortType, bool asc) {
            return base.Channel.GetAllAlarmsForTimeAsync(start, end, sortType, asc);
        }
        
        public ReportManager.ReportManagerService.AlarmTime[] GetAllAlarmsForPriority(int priority, bool asc) {
            return base.Channel.GetAllAlarmsForPriority(priority, asc);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerService.AlarmTime[]> GetAllAlarmsForPriorityAsync(int priority, bool asc) {
            return base.Channel.GetAllAlarmsForPriorityAsync(priority, asc);
        }
        
        public ReportManager.ReportManagerService.TagValue[] GetAllTagValuesForTime(System.DateTime start, System.DateTime end, bool asc) {
            return base.Channel.GetAllTagValuesForTime(start, end, asc);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerService.TagValue[]> GetAllTagValuesForTimeAsync(System.DateTime start, System.DateTime end, bool asc) {
            return base.Channel.GetAllTagValuesForTimeAsync(start, end, asc);
        }
        
        public ReportManager.ReportManagerService.TagValue[] GetAllTagValuesForType(string type, bool asc) {
            return base.Channel.GetAllTagValuesForType(type, asc);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerService.TagValue[]> GetAllTagValuesForTypeAsync(string type, bool asc) {
            return base.Channel.GetAllTagValuesForTypeAsync(type, asc);
        }
        
        public ReportManager.ReportManagerService.TagValue[] GetAllTagValuesForName(string tagName, bool asc) {
            return base.Channel.GetAllTagValuesForName(tagName, asc);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerService.TagValue[]> GetAllTagValuesForNameAsync(string tagName, bool asc) {
            return base.Channel.GetAllTagValuesForNameAsync(tagName, asc);
        }
    }
}
